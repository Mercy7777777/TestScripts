/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 10 02:57:49 GMT 2022
 */

package cn.byhieg.reflectiontutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cn.byhieg.reflectiontutorial.MyList;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MyList_ESTest extends MyList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MyList<Object> myList0 = new MyList<Object>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      myList0.setStringLists(linkedList0);
      linkedList0.add("H0e-:7:}");
      MyList<String> myList1 = new MyList<String>();
      List<String> list0 = myList0.stringLists;
      myList1.setStringLists(list0);
      List<String> list1 = myList1.getStringLists();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MyList<Object> myList0 = new MyList<Object>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      myList0.lists = (List<Object>) linkedList0;
      myList0.add((Object) null);
      Object object0 = myList0.get(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MyList<Object> myList0 = new MyList<Object>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) "");
      myList0.lists = (List<Object>) linkedList0;
      Object object0 = myList0.get(0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MyList<Integer> myList0 = new MyList<Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      myList0.lists = (List<Integer>) linkedList0;
      // Undeclared exception!
      try { 
        myList0.get((-1737));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1737, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MyList<Integer> myList0 = new MyList<Integer>();
      List<String> list0 = myList0.getStringLists();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MyList<Integer> myList0 = new MyList<Integer>();
      // Undeclared exception!
      try { 
        myList0.get((-1737));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.byhieg.reflectiontutorial.MyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MyList<String> myList0 = new MyList<String>();
      // Undeclared exception!
      try { 
        myList0.add("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.byhieg.reflectiontutorial.MyList", e);
      }
  }
}
