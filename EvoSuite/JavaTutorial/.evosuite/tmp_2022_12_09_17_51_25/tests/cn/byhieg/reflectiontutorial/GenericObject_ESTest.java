/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 10 02:23:17 GMT 2022
 */

package cn.byhieg.reflectiontutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import cn.byhieg.reflectiontutorial.GenericObject;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GenericObject_ESTest extends GenericObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GenericObject genericObject0 = new GenericObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      genericObject0.setLists(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenericObject genericObject0 = new GenericObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      genericObject0.lists = (List<String>) linkedList0;
      List<String> list0 = genericObject0.getLists();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GenericObject genericObject0 = new GenericObject();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("cn.byhieg.reflectiontutorial.GenericObject");
      genericObject0.lists = (List<String>) linkedList0;
      List<String> list0 = genericObject0.getLists();
      assertTrue(list0.contains("cn.byhieg.reflectiontutorial.GenericObject"));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GenericObject genericObject0 = new GenericObject();
      List<String> list0 = genericObject0.getLists();
      assertNull(list0);
  }
}
