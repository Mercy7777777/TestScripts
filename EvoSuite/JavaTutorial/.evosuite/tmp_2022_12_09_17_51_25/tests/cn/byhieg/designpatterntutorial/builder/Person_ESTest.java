/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 10 02:45:45 GMT 2022
 */

package cn.byhieg.designpatterntutorial.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cn.byhieg.designpatterntutorial.builder.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Person_ESTest extends Person_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      person_Builder0.setWeight((-3112));
      Person person0 = new Person(person_Builder0);
      int int0 = person0.getWeight();
      assertEquals((-3112), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person.Builder person_Builder1 = person_Builder0.setName(" name  = ");
      Person person0 = person_Builder1.build();
      String string0 = person0.getName();
      assertEquals(" name  = ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person.Builder person_Builder1 = person_Builder0.setName("");
      Person person0 = new Person(person_Builder1);
      String string0 = person0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person.Builder person_Builder1 = person_Builder0.setHeight(1);
      Person person0 = new Person(person_Builder1);
      int int0 = person0.getHeight();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person.Builder person_Builder1 = person_Builder0.setAge(1474);
      Person person0 = new Person(person_Builder1);
      int int0 = person0.getAge();
      assertEquals(1474, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person.Builder person_Builder1 = person_Builder0.setAge((-1292));
      Person person0 = new Person(person_Builder1);
      int int0 = person0.getAge();
      assertEquals((-1292), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Person person0 = null;
      try {
        person0 = new Person((Person.Builder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cn.byhieg.designpatterntutorial.builder.Person$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person.Builder person_Builder1 = person_Builder0.setHeight((-1006));
      Person person0 = new Person(person_Builder1);
      int int0 = person0.getHeight();
      assertEquals((-1006), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person.Builder person_Builder1 = person_Builder0.setWeight(1);
      Person person0 = new Person(person_Builder1);
      int int0 = person0.getWeight();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person person0 = new Person(person_Builder0);
      String string0 = person0.toString();
      assertEquals("age = 0 name  = null height = 0 weight = 0", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person person0 = new Person(person_Builder0);
      int int0 = person0.getAge();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person person0 = new Person(person_Builder0);
      int int0 = person0.getWeight();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person person0 = new Person(person_Builder0);
      String string0 = person0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Person.Builder person_Builder0 = new Person.Builder();
      Person person0 = new Person(person_Builder0);
      int int0 = person0.getHeight();
      assertEquals(0, int0);
  }
}
