/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 10 02:25:24 GMT 2022
 */

package cn.byhieg.collectiontutorial.listtutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cn.byhieg.collectiontutorial.listtutorial.ArrayListDemo;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayListDemo_ESTest extends ArrayListDemo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayListDemo arrayListDemo0 = new ArrayListDemo();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-1));
      linkedList0.offerLast(integer0);
      arrayListDemo0.setListC(linkedList0);
      ArrayList<Integer> arrayList0 = arrayListDemo0.getListC();
      assertTrue(arrayList0.contains((-1)));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayListDemo arrayListDemo0 = new ArrayListDemo();
      // Undeclared exception!
      try { 
        arrayListDemo0.setListC((Collection<? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayListDemo arrayListDemo0 = new ArrayListDemo();
      ArrayList<Integer> arrayList0 = arrayListDemo0.getListA();
      arrayListDemo0.setListC(arrayList0);
      ArrayList<Integer> arrayList1 = arrayListDemo0.getListC();
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayListDemo arrayListDemo0 = new ArrayListDemo();
      ArrayList<Double> arrayList0 = arrayListDemo0.getListB();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayListDemo arrayListDemo0 = new ArrayListDemo();
      ArrayList<Integer> arrayList0 = arrayListDemo0.getListC();
      assertNull(arrayList0);
  }
}
